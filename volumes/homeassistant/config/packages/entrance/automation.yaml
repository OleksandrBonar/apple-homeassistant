entrance_automation:
  automation:

    - alias: Entrance - Automation - Domofon - Open Once for Couriers
      initial_state: true
      trigger:
        - platform: state
          entity_id:
            - sensor.oleksandr_iphone_last_notification
      condition:
        - condition: state
          entity_id: person.oleksandr
          state: "home"
        - condition: or
          conditions:
            - condition: template
              value_template: >-
                {{ trigger.to_state.state | regex_search('Text .* message .*') }}
            - condition: template
              value_template: >-
                {{ trigger.to_state.state | regex_search('Your courier is close! .*') }}
      action:
        - service: notify.telegram_user_oleksandr
          data:
            message: "The courier is close!"
        - service: switch.turn_on
          target:
            entity_id: switch.domofon_once
        - service: notify.telegram_user_oleksandr
          data:
            message: "_Intercom_: single auto-opening mode is enabled."
        - wait_for_trigger:
          - platform: state
            entity_id: sensor.domofon_state
            to: "Open"
          timeout: "00:10:00"
        - wait_for_trigger:
          - platform: state
            entity_id: sensor.domofon_state
            to: "Idle"
          timeout: "00:00:05"
        - service: notify.telegram_user_oleksandr
          data:
            message: "_Intercom_: Disabled single auto-opening mode."
  
    - alias: Entrance - Automation - Domofon - Incoming Call Notification
      initial_state: true
      trigger:
        - platform: state
          entity_id: sensor.domofon_state
          to: "Ring"
      action:
        - service: notify.telegram_user_oleksandr
          data:
            message: "_Intercom_: incoming call... {% if is_state('switch.domofon_always', 'on') or is_state('switch.domofon_once', 'on') %}(*will open automatically*){% endif %}"
            data:
              inline_keyboard:
                - "{{ '-' if is_state('switch.domofon_always', 'on') or is_state('switch.domofon_once', 'on') else 'Open:/domofon_open, Reject:/domofon_reject' }}"
        - wait_for_trigger:
          - platform: template
            value_template: >-
              {{ is_state('sensor.domofon_state', 'Open') or is_state('sensor.domofon_state', 'Drop') }}
          timeout:
            seconds: 10

    - alias: Entrance - Automation - Motion - Light Auto ON for dark time
      initial_state: true
      trigger:
        - platform: state
          entity_id: binary_sensor.entrance_motion
          to: "on"
      condition:
        - condition: or
          conditions:
            - condition: sun
              after: sunset
            - condition: sun
              before: sunrise
        - condition: state
          entity_id: person.oleksandr
          state: "home"
        - condition: or
          conditions:
            - condition: state
              entity_id: light.entrance
              state: "off"
            - condition: numeric_state
              entity_id: light.entrance
              attribute: brightness
              below: 255
      action:
        - service: light.turn_on
          target:
            entity_id: light.entrance
          data:
            brightness_pct: 100
        - wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.entrance_motion
            to: "off"
        - service: light.turn_on
          target:
            entity_id: light.entrance
          data:
            brightness_pct: 15

    - alias: Entrance - Automation - Motion
      initial_state: true
      trigger:
        - platform: state
          entity_id: binary_sensor.entrance_motion
          to: "on"
      condition:
        - condition: state
          entity_id: person.oleksandr
          state: "not_home"
      action:
        - service: light.turn_on
          target:
            entity_id: light.entrance
          data:
            brightness_pct: 100
        - service: notify.telegram_user_oleksandr
          data:
            message: "Security: Someone is at the door for a long time"
