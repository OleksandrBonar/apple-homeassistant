telegram_command_menu_balcony:
  automation:
    - id: Telegram - Command Menu Balcony Control
      alias: telegram_command_menu_balcony_control
      initial_state: true
      trigger:
        - platform: event
          event_type: telegram_callback
          event_data: {}
      action:
        - choose:
          - conditions:
            - condition: template
              value_template: "{{ trigger.event.data.command == '/balcony_control' }}"
            sequence:
              - service: telegram_bot.delete_message
                data_template:
                  chat_id: "{{ trigger.event.data.chat_id }}"
                  message_id: "{{ trigger.event.data.message.message_id }}"
              - service: telegram_bot.send_message
                data:
                  target: "{{ trigger.event.data.chat_id }}"
                  message: &msg_balcony |
                    Temperature - {{ states('sensor.balcony_temperature') }}, Humidity - {{ states('sensor.balcony_humidity') }}
                  inline_keyboard: &kbd_balcony
                    - "{{ '\U0001F4A1' }} Light - {% if is_state('light.balcony', 'on') %}ðŸŸ¢{% else %}ðŸ”´{% endif %}:/balcony_light_toggle"
                    - "{{ '\U000021A9' }} Back:/back, {{ '\U000021AA' }} Update:/balcony_control"
        - choose:
          - conditions:
            - condition: template
              value_template: "{{ trigger.event.data.command == '/balcony_light_toggle' }}"
            sequence:
              - service: light.toggle
                entity_id: light.balcony
              - delay:
                  milliseconds: 500
              - service: telegram_bot.answer_callback_query
                data:
                  callback_query_id: "{{ trigger.event.data.id }}"
                  message: |
                    {{ '\U0001F4AC' }} Light is {% if is_state('light.balcony', 'on') %}on{% else %}off{% endif %}
              - service: telegram_bot.delete_message
                data_template:
                  chat_id: "{{ trigger.event.data.chat_id }}"
                  message_id: "{{ trigger.event.data.message.message_id }}"
              - service: telegram_bot.send_message
                data:
                  target: "{{ trigger.event.data.chat_id }}"
                  message: *msg_balcony
                  inline_keyboard: *kbd_balcony
